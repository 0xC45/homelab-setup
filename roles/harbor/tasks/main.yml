---
- when: ansible_distribution != 'Debian' or ansible_distribution_version != '10'
  name: check platform
  fail:
    msg: This role requires Debian 10

########## SETUP

- name: create /root/ansible-workdir/harbor/ directory
  become: true
  file:
    path: /root/ansible-workdir/harbor/
    state: directory
    mode: 0700
    owner: root
    group: root

########## DOCKER COMPOSE

- name: check if docker-compose binary exists
  register: docker_compose_binary
  become: true
  stat:
    path: /root/ansible-workdir/harbor/docker-compose-1.27.4-Linux-x86_64

- name: download docker-compose binary
  when: docker_compose_binary.stat.exists == false
  become: true
  get_url:
    url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64
    checksum: sha256:04216d65ce0cd3c27223eab035abfeb20a8bef20259398e3b9d9aa8de633286d
    dest: /root/ansible-workdir/harbor/docker-compose-1.27.4-Linux-x86_64
    mode: 0700
    owner: root
    group: root

- name: install docker-compose binary to global location
  become: true
  copy:
    src: /root/ansible-workdir/harbor/docker-compose-1.27.4-Linux-x86_64
    remote_src: true
    dest: /usr/local/bin/docker-compose
    mode: 0755
    owner: root
    group: root

########## LINUX USER

- name: create harbor group
  become: true
  group:
    name: harbor
    state: present

- name: create harbor user
  become: true
  user:
    name: harbor
    system: true
    shell: /bin/bash
    comment: harbor user
    group: harbor
    home: /home/harbor
    state: present

- name: allow harbor user to access docker socket
  become: true
  user:
    name: harbor
    groups: docker
    append: true

########## HARBOR

- name: check if harbor archive exists
  register: harbor_archive
  become: true
  stat:
    path: /root/ansible-workdir/harbor/harbor-offline-installer-v2.1.1.tgz

- name: download harbor archive
  when: harbor_archive.stat.exists == false
  become: true
  get_url:
    url: https://github.com/goharbor/harbor/releases/download/v2.1.1/harbor-offline-installer-v2.1.1.tgz
    checksum: md5:7f2add31ff368acbcce778e7362e0e33
    dest: /root/ansible-workdir/harbor/harbor-offline-installer-v2.1.1.tgz
    mode: 0600
    owner: root
    group: root

- name: extract harbor archive
  become: true
  unarchive:
    src: /root/ansible-workdir/harbor/harbor-offline-installer-v2.1.1.tgz
    remote_src: true
    dest: /home/harbor
    creates: /home/harbor/harbor
    mode: 0755
    owner: harbor
    group: harbor

- name: create harbor config file
  become: true
  copy:
    src: roles/harbor/files/harbor.yml
    dest: /home/harbor/harbor/harbor.yml
    owner: harbor
    group: harbor
    mode: 0640
    force: false

- name: write HOSTNAME to harbor config file
  become: true
  replace:
    path: /home/harbor/harbor/harbor.yml
    regexp: '\${HOSTNAME}'
    replace: '{{ harbor_hostname }}'
  notify: restart harbor

- name: write DATABASE_PASSWORD to harbor config file
  become: true
  replace:
    path: /home/harbor/harbor/harbor.yml
    regexp: '\${DATABASE_PASSWORD}'
    replace: '{{ harbor_database_password }}'
  notify: restart harbor

########## TLS CERTIFICATES

- name: copy server private key to harbor config directory
  become: true
  copy:
    content: '{{ harbor_key }}'
    dest: /home/harbor/harbor/harbor.key.pem
    owner: harbor
    group: harbor
    mode: '0600'
  notify: restart harbor

- name: copy server cert to harbor config directory
  become: true
  copy:
    content: '{{ harbor_cert }}'
    dest: /home/harbor/harbor/harbor.cert.pem
    owner: harbor
    group: harbor
    mode: '0600'
  notify: restart harbor

########## INSTALL

- name: run harbor install script
  when: harbor_archive.stat.exists == false
  become: true
  shell: /home/harbor/harbor/install.sh --with-clair

########## SYSTEMD SERVICE

- name: create harbor systemd service config
  become: true
  copy:
    src: roles/harbor/files/harbor.service
    dest: /etc/systemd/system/harbor.service
    owner: root
    group: root
    mode: 0644

- name: start and enable harbor service
  become: true
  systemd:
    enabled: true
    state: started
    name: harbor
