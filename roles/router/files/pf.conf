# interfaces
lo_if = "lo0"
wan_if = "em0"
primary_if = "em1"
secondary_if = "em2"

# cidr ranges
primary_range = "192.168.1.0/24"
secondary_range = "192.168.2.0/24"

# setup non-routable address list
# note: since this firewall is behind a local network,
#       do not include the default gateway in the table
table <martians> { 0.0.0.0/8 10.0.0.0/8 127.0.0.0/8 169.254.0.0/16     \
                   172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 224.0.0.0/3 \
                   192.168.0.0/16 198.18.0.0/15 198.51.100.0/24        \
                   203.0.113.0/24 !192.168.0.1 }

# drop blocked traffic
set block-policy drop
# set interface for logging
set loginterface $wan_if
# ignore loopback traffic
set skip on $lo_if

# normalize incoming packets
match in all scrub (no-df random-id max-mss 1460)
# perform NAT
match out on $wan_if inet from !($wan_if:network) to any nat-to ($wan_if:0)

# prevent spoofed traffic
antispoof quick for { $wan_if $primary_if $secondary_if }

# block non-routable traffic
block in quick on $wan_if from <martians> to any
block return out quick on $wan_if from any to <martians>

# block all traffic
block all
# allow outgoing traffic
pass out inet
# allow traffic from internal networks
pass in on { $primary_if $secondary_if } inet
# block traffic from primary <--> secondary
block in on $primary_if from $primary_range to $secondary_range
block in on $secondary_if from $secondary_range to $primary_range
# block outgoing unencrypted dns requests
block proto { TCP UDP } from { $primary_range $secondary_range } to any port 53
pass proto { TCP UDP } from { $primary_range $secondary_range} to self port 53
# block ssh access for wan_if and secondary_if
block in on $wan_if proto TCP to self port ssh
block in on $secondary_if proto TCP to self port ssh
